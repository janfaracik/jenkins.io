---
layout: documentation
notitle: true
---

:ruby
  section_key = File.basename(page.source_path, File.extname(page.source_path))
  chapter_key = File.basename(File.dirname(page.source_path))
  index = site.handbook.chapters.index { |c| c.key == chapter_key }
  chapter = site.handbook.chapters[index]

  our_index = chapter.sections.find_index { |s| s.key == section_key }
  total = chapter.sections.size
  next_is_chapter = false

  # We need to do all this silly arithmetic in order to determine what the
  # indices for the previous and/or next sections in this chapter would be
  prev_section = nil
  if our_index > 0
    prev_section = chapter.sections[our_index - 1]
  end

  next_section = nil
  if our_index < (total - 1)
    next_section = chapter.sections[our_index + 1]
  end

  # If we're at the end of the chapter, and there's another chapter after us,
  # let's make the next section the next chapter's index page
  if next_section.nil? && (index < site.handbook.chapters.size)
    next_is_chapter = true
    next_section = site.handbook.chapters[index + 1]
  end

%div
  .ctc
    .section
      - if page.wip
        = partial( 'wip.adoc' )

      = content

      - if page.references && page.references.size > 0
        %h2
          References

        %ul
          - page.references.each do |reference|
            %li
              %a{:href => reference.url}<>
                = reference.title
              - if reference.description
                \:
                = reference.description

%div.app-TODO-pagination
  %div
    - unless prev_section.nil?
      %a.app-button.app-button--tertiary.prev{:href => File.join('..', prev_section.key)}
        %ion-icon{:name => "arrow-back-outline"}
        %div
          Back
        %span
          #{prev_section.title}
  %div
    - unless next_section.nil?
      - if next_is_chapter
        %a.app-button.app-button--tertiary.next{:href => File.join('../../', next_section.key)}
          %div
            Next
          %ion-icon{:name => "arrow-forward-outline"}
          %span
            #{next_section.title}
      - else
        %a.app-button.app-button--tertiary.next{:href => File.join('..', next_section.key)}
          %div
            Next
          %ion-icon{:name => "arrow-forward-outline"}
          %span
            #{next_section.title}

= partial ('_feedback-footer.html')
